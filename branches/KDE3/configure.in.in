#MIN_CONFIG(3.0.0)
AM_INIT_AUTOMAKE("kmediafactory", "20061010")
AC_C_BIGENDIAN
AC_CHECK_KDEMAXPATHLEN

KDE_FIND_PATH(extractrc, EXTRACTRC,
              [$kde_default_bindirs], [AC_MSG_WARN([no])])
AC_SUBST(EXTRACTRC)

KDE_FIND_PATH(msgfmt, MSGFMT,
              [$kde_default_bindirs], [AC_MSG_WARN([no])])
AC_SUBST(MSGFMT)

KDE_FIND_PATH(zip, ZIP,
              [$kde_default_bindirs], [AC_MSG_WARN([no])])
AC_SUBST(ZIP)

KDE_FIND_PATH(kconfig_compiler, KCONFIG_COMPILER,
              [$kde_default_bindirs], [AC_MSG_WARN([no])])
AC_SUBST(KCONFIG_COMPILER)

KDE_FIND_PATH(makekdewidgets, MAKEKDEWIDGETS,
              [$kde_default_bindirs], [AC_MSG_WARN([no])])
AC_SUBST(MAKEKDEWIDGETS)

KDE_FIND_PATH(dvdauthor, DVDAUTHOR,
              [$kde_default_bindirs], [AC_MSG_WARN([no])])
AC_SUBST(DVDAUTHOR)

KDE_FIND_PATH(mpeg2enc, MPEG2ENC,
              [$kde_default_bindirs], [AC_MSG_WARN([no])])
AC_SUBST(MPEG2ENC)

KDE_FIND_PATH(dvd-slideshow, DVDSLIDESHOW,
              [$kde_default_bindirs], [AC_MSG_WARN([no])])
AC_SUBST(DVDSLIDESHOW)

sinclude(admin/funcs.m4)

sinclude(admin/fontconfig.m4)
AC_LIB_FONTCONFIG()

sinclude(admin/dv.m4)
AC_LIB_DV()

sinclude(admin/ffmpeg.m4)
AC_LIB_FFMPEG()

sinclude(admin/dvdread.m4)
AC_LIB_DVDREAD()

sinclude(admin/xine.m4)
AC_LIB_XINE([], DO_NOT_COMPILE="$DO_NOT_COMPILE player")

sinclude(admin/xinerama.m4)
AC_XINERAMA()

sinclude(admin/va_copy.m4)
AC_VA_COPY()

sinclude(admin/magick.m4)
AC_IMAGEMAGICK()

sinclude(admin/theora.m4)
AC_LIB_THEORA()

sinclude(admin/ogg.m4)
AC_LIB_OGG()

sinclude(admin/unopkg.m4)
AC_UNOPKG()

STDCFLAG=-std=iso9899:1990
AC_SUBST(STDCFLAG)

dnl -----------------------------------------------------------------------
dnl ffmpeg needs these
dnl -----------------------------------------------------------------------
AC_CHECK_HEADERS(malloc.h)
AC_CHECK_FUNCS(memalign localtime_r)
AC_CHECK_HEADER(dlfcn.h, [
  AC_CHECK_LIB(dl, dlopen, [
    AC_DEFINE(HAVE_DLOPEN, 1, [ ffmpeg ])
    AC_DEFINE(HAVE_DLFCN, 1, [ ffmpeg ])
  ])
])

sinclude(admin/lrintf.m4)
AC_C99_FUNC_LRINTF

# test gcc version to see if vector builtins can be used
# currently only used on i386 for MMX builtins
old_cflags=$CFLAGS
CFLAGS="$CFLAGS -msse"
AC_TRY_COMPILE([
  #include <xmmintrin.h>
],[
    int main(void) {
    #if __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 2)
    return 0;
    #else
    #error no vector builtins
    #endif
    }
],[
  builtin_vector="yes"
],[])
CFLAGS=$old_cflags

AC_ARG_ENABLE(mmx,
  AC_HELP_STRING([--disable-mmx], [disable mmx optimizations]),
  [mmx=${enableval}], [mmx=auto]
)

cpu=`uname -m`

case "$cpu" in
  i386|i486|i586|i686|i86pc|BePC)
    AC_DEFINE(ARCH_X86, 1, [ ffmpeg ])
    AC_DEFINE(__CPU__, 586, [ ffmpeg ])
    if test "$mmx" = "auto"; then
      mmx="yes"
    fi
    arch="X86"
  ;;
  x86_64|amd64)
    AC_DEFINE(ARCH_X86_64, 1, [ ffmpeg ])
    AC_DEFINE(__CPU__, 586, [ ffmpeg ])
    if test "$mmx" = "auto"; then
      mmx="yes"
    fi
    arch="X86_64"
  ;;
  *)
    AC_DEFINE(__CPU__, 386, [ ffmpeg ])
  ;;
esac

dnl restrict keyword finding
restrict=""
for restrict_keyword in restrict __restrict__ __restrict; do
  AC_MSG_CHECKING(for restrict keyword $restrict_keyword)
  AC_TRY_COMPILE([],[ void foo(char * $restrict_keyword p); ],[
                 KEYWORD_FOUND=yes && AC_MSG_RESULT(yes) ],[
                 KEYWORD_FOUND=no && AC_MSG_RESULT(no) ])
  if test x$KEYWORD_FOUND = xyes; then
    restrict="$restrict_keyword"
    break
  fi
done
if test x$restrict = x; then
  AC_MSG_ERROR(No restrict keyword found)
fi
AC_DEFINE_UNQUOTED(restrict, $restrict, [restrict keyword])

AM_CONDITIONAL(ARCH_X86, test "x$arch" = "xX86" )
AM_CONDITIONAL(ARCH_X86_64, test "x$arch" = "xX86_64" )
AM_CONDITIONAL(HAVE_MMX, test "$mmx" = "yes" )
if test "$mmx" = "yes"; then
  AC_DEFINE(HAVE_MMX, 1, [ ffmpeg ])
fi
AM_CONDITIONAL(HAVE_BUILTIN_VECTOR, test "$builtin_vector" = "yes" )
if test "$builtin_vector" = "yes"; then
  AC_DEFINE(HAVE_BUILTIN_VECTOR, 1, [ ffmpeg ])
fi

AC_DEFINE(CONFIG_GPL, 1, [ ffmpeg ])
AC_DEFINE_UNQUOTED(TUNECPU, generic, [ ffmpeg ])
AC_DEFINE(SIMPLE_IDCT, 1, [ ffmpeg ])
dnl AC_DEFINE(HAVE_VHOOK, 1, [ ffmpeg ])
dnl AC_DEFINE(CONFIG_PP, 1, [ ffmpeg ])

AC_DEFINE(CONFIG_AC3_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MP2_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MP3LAME_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_OGGVORBIS_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_OGGVORBIS_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_FAAC_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_XVID_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MPEG1VIDEO_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_H264_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MPEG2VIDEO_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_H261_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_H263_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_H263P_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_FLV_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_RV10_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_RV20_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MPEG4_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MSMPEG4V1_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MSMPEG4V2_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MSMPEG4V3_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_WMV1_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_WMV2_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_SVQ1_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MJPEG_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_LJPEG_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_PNG_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_PPM_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_PGM_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_PGMYUV_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_PBM_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_PAM_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_HUFFYUV_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_FFVHUFF_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_ASV1_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_ASV2_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_FFV1_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_SNOW_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_ZLIB_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_DVVIDEO_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_SONIC_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_SONIC_LS_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_X264_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_LIBGSM_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_RAWVIDEO_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_RAWVIDEO_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_H263_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_H261_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MPEG4_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MSMPEG4V1_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MSMPEG4V2_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MSMPEG4V3_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_WMV1_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_WMV2_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_VC9_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_WMV3_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_H263I_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_FLV_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_RV10_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_RV20_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_SVQ1_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_SVQ3_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_WMAV1_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_WMAV2_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_INDEO2_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_INDEO3_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_TSCC_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_ULTI_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_QDRAW_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_XL_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_QPEG_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_LOCO_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_WNV1_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_AASC_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_FRAPS_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_AAC_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MPEG4AAC_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MPEG1VIDEO_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MPEG2VIDEO_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MPEGVIDEO_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MPEG_XVMC_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_DVVIDEO_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MJPEG_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MJPEGB_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_SP5X_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_PNG_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MP2_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MP3_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MP3ADU_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MP3ON4_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MACE3_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MACE6_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_HUFFYUV_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_FFVHUFF_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_FFV1_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_SNOW_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_CYUV_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_H264_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_VP3_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_THEORA_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_ASV1_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_ASV2_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_VCR1_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_CLJR_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_FOURXM_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MDEC_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_ROQ_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_INTERPLAY_VIDEO_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_XAN_WC3_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_RPZA_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_CINEPAK_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MSRLE_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MSVIDEO1_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_VQA_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_IDCIN_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_EIGHTBPS_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_SMC_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_FLIC_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_TRUEMOTION1_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_TRUEMOTION2_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_VMDVIDEO_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_VMDAUDIO_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_MSZH_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_ZLIB_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_SONIC_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_AC3_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_DTS_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_RA_144_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_RA_288_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_ROQ_DPCM_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_INTERPLAY_DPCM_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_XAN_DPCM_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_SOL_DPCM_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_QTRLE_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_FLAC_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_SHORTEN_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_ALAC_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_WS_SND1_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_VORBIS_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_LIBGSM_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_AMR_NB_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_AMR_NB_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_AMR_WB_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_AMR_WB_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_QDM2_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_BMP_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_COOK_DECODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_DVDSUB_ENCODER, 1, [ ffmpeg ])
AC_DEFINE(CONFIG_TRUESPEECH_DECODER, 1, [ ffmpeg ])
if test "$ac_have_libtheora" = "yes"; then
  AC_DEFINE(CONFIG_OGGTHEORA_ENCODER, 1, [ ffmpeg ])
  AC_DEFINE(CONFIG_OGGTHEORA_DECODER, 1, [ ffmpeg ])
fi

line="----------------------------------------------------------------------"

echo "$line" > $srcdir/config.summary
echo "Configure summary" >> $srcdir/config.summary
echo "$line" >> $srcdir/config.summary

echo "Mandatory" >> $srcdir/config.summary

echo -n "- FontConfig ..................... " >> $srcdir/config.summary
if test "$ac_have_libfontconfig" = "yes"; then
  echo "Yes" >> $srcdir/config.summary
else
  echo "No" >> $srcdir/config.summary
  stop="yes"
fi

echo -n "- FFMpeg ......................... " >> $srcdir/config.summary
if test "$ac_have_libffmpeg" = "yes"; then
  echo "Yes" >> $srcdir/config.summary
else
  echo "No" >> $srcdir/config.summary
fi

echo -n "- msgfmt ......................... " >> $srcdir/config.summary
if test "x$MSGFMT" = "x"; then
  echo "No" >> $srcdir/config.summary
  stop="yes"
else
  echo "Yes" >> $srcdir/config.summary
fi

echo -n "- zip ............................ " >> $srcdir/config.summary
if test "x$ZIP" = "x"; then
  echo "No" >> $srcdir/config.summary
  stop="yes"
else
  echo "Yes" >> $srcdir/config.summary
fi

echo -n "- ImageMagick >= 6.0 ............. " >> $srcdir/config.summary
if test "$ac_have_libmagick" = "yes"; then
  echo "Yes" >> $srcdir/config.summary
else
  echo "No" >> $srcdir/config.summary
  stop="yes"
fi

echo -n "- dvdauthor ...................... " >> $srcdir/config.summary
if test "x$DVDAUTHOR" = "x"; then
  echo "No" >> $srcdir/config.summary
else
  echo "Yes" >> $srcdir/config.summary
fi

echo -n "- mjpegtools ..................... " >> $srcdir/config.summary
if test "x$MPEG2ENC" = "x"; then
  echo "No" >> $srcdir/config.summary
else
  echo "Yes" >> $srcdir/config.summary
fi

echo "$line" >> $srcdir/config.summary

echo "Optional" >> $srcdir/config.summary

echo -n "- DV import plugin (libdv) ....... " >> $srcdir/config.summary
if test "$ac_have_libdv" = "yes"; then
  echo "Yes" >> $srcdir/config.summary
else
  echo "No, libdv missing." >> $srcdir/config.summary
fi

echo -n "- DVD info dialog (libdvdread) ... " >> $srcdir/config.summary
if test "$ac_have_libdvdread" = "yes"; then
  echo "Yes" >> $srcdir/config.summary
else
  echo "No, libdvdread missing." >> $srcdir/config.summary
fi

echo -n "- Own DVD player (libxine) ....... " >> $srcdir/config.summary
if test "$ac_have_libxine" = "yes"; then
  echo "Yes" >> $srcdir/config.summary
else
  echo "No, libxine missing." >> $srcdir/config.summary
fi

echo -n "- Support theora files (libtheora) " >> $srcdir/config.summary
if test "$ac_have_libtheora" = "yes"; then
  echo "Yes" >> $srcdir/config.summary
else
  echo "No, libtheora missing." >> $srcdir/config.summary
fi

echo -n "- Slideshow (dvd-slideshow) ...... " >> $srcdir/config.summary
if test "x$DVDSLIDESHOW" = "x"; then
  echo "No" >> $srcdir/config.summary
else
  echo "Yes" >> $srcdir/config.summary
fi

echo -n "- office macro install (unopkg) .. " >> $srcdir/config.summary
if test "x$UNOPKG" = "x"; then
  echo "No" >> $srcdir/config.summary
else
  echo "Yes" >> $srcdir/config.summary
fi

echo "$line" >> $srcdir/config.summary

if test "$stop" = "yes"; then
    cat $srcdir/config.summary
    echo "Needed dependencies for building missing!!"
    echo "$line"
    AC_MSG_ERROR([])
fi
